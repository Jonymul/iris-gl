{"version":3,"sources":["../../../src/CanvasRenderer/ShaderCompiler.ts","../../../src/CanvasRenderer/warnings.ts","../../../src/CanvasRenderer/index.ts","../../../src/types/CropParameters.ts","../../../src/types/AdjustmentParameters.ts","../../../src/Iris/index.ts","../../../src/contexts/IrisContext.ts","../../../src/hooks/useTempGetImageData.ts","../../../src/hooks/useIrisContext.ts","../../../src/hooks/useAdjustment.ts","../../../src/hooks/useAdjustments.ts","components/atoms/ParameterControl/index.tsx","components/atoms/Carousel/index.tsx","components/atoms/TabMenu/index.tsx","components/atoms/TabMenuItem/index.tsx","components/molecules/ModeSelector/index.tsx","components/atoms/Icon/index.tsx","components/atoms/ParameterChip/index.tsx","components/atoms/ParameterDivider/index.tsx","components/molecules/ParameterCarousel/index.tsx","components/organisms/EditorControls/index.tsx","index.tsx","lib/GlobalStyles.tsx","../../../src/components/IrisProvider.tsx","../../../src/components/IrisPreview.tsx"],"names":["value","this","gl","console","Rotation","ParameterControl","props","min","max","inputValue","onChange","baseProps","useState","setValue","scrubTrackWidth","useRef","scrubTrackRef","canvasRef","valueCent","useMemo","Math","round","length","drawTrack","useCallback","current","pixelRatio","window","devicePixelRatio","canvas","ctx","getContext","w","clientWidth","h","clientHeight","totalMarks","distanceBetweenMarks","width","height","clearRect","lineWidth","m","x","floor","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","handleScrubTrackScroll","event","newValue","currentTarget","scrollLeft","undefined","useLayoutEffect","useEffect","scrubTrack","addEventListener","passive","removeEventListener","css","ref","Carousel","forwardRef","children","snap","paddingX","paddingY","gap","snapSkipConstructors","focusedItem","onFocusedItemChange","_highlightIndicator","carouselRef","isAutoScrolling","internalFocusedItem","setInternalFocusedItem","itemArray","Array","ignoredItemIndeces","map","i","index","some","c","type","filter","Number","setTimeout","targetIndex","slice","_","i3","elementToFocus","offsetLeft","handleScroll","e","target","currentVisualCenter","closestIndex","closestPosition","splice","forEach","child","childE","left","offset","abs","navigator","vibrate","carouselElem","mergeRefs","item","isIgnoredConstructor","key","role","cloneElement","TabHighlight","TabMenu","onTabChange","highlightBounds","setHighlightBounds","highlightedTab","findIndex","selected","targetChild","Children","TabMenuItem","label","menuItems","ModeSelector","selectedMode","setSelectedMode","handleChangeMode","onClick","Icon","icon","size","className","join","parameterChipColors","default","background","active","inactive","ParameterChip","variant","selectedColors","ParameterDivider","parameters","parameter","parameterIndexes","p","ParameterCarousel","selectedParameter","onClickParameter","hasSelectedItem","handleFocusedItemChange","indexOf","param","AdjustmentControl","useAdjustment","paramValue","setParamValue","ReactDOM","render","styles","setSelectedParameter","title","document","getElementById"],"mappings":"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","file":"static/js/main.90c0a539.chunk.js","sourcesContent":["export class ShaderCompiler {\n    constructor(gl) {\n        this.setWebGLRenderingContext(gl);\n    }\n    compileShader(shaderSource, type) {\n        const gl = this.context;\n        const shader = gl.createShader(type);\n        gl.shaderSource(shader, shaderSource);\n        gl.compileShader(shader);\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            console.error(`Shader failed to compile: ${gl.getShaderInfoLog(shader)}`);\n        }\n        return shader;\n    }\n    compileVertexShader(shaderSource) {\n        const gl = this.context;\n        return this.compileShader(shaderSource, gl.VERTEX_SHADER);\n    }\n    compileFragmentShader(shaderSource) {\n        const gl = this.context;\n        return this.compileShader(shaderSource, gl.FRAGMENT_SHADER);\n    }\n    setWebGLRenderingContext(context) {\n        this.context = context;\n    }\n}\n//# sourceMappingURL=ShaderCompiler.js.map","export function warnUnknownName(name) {\n    console.warn(`Couldn't set uniform. The uniform ${name} does not exist`);\n}\nexport function warnUnknownType(name) {\n    console.warn(`Couldn't set uniform. The type for ${name} could not be determined`);\n}\nexport function warnNumeric(name, value) {\n    console.warn(`Couldn't set uniform. \"${value}\" is not a valid numeric value for ${name}`);\n}\nexport function warnF32List(name, value) {\n    console.warn(`Couldn't set uniform. \"${value}\" is not a valid Float32List for ${name}`);\n}\nexport function warnI32List(name, value) {\n    console.warn(`Couldn't set uniform. \"${value}\" is not a valid Int32List for ${name}`);\n}\n//# sourceMappingURL=warnings.js.map","import { ShaderCompiler } from \"./ShaderCompiler\";\nimport { warnF32List, warnI32List, warnNumeric, warnUnknownName, warnUnknownType, } from \"./warnings\";\nconst BASE_VERTEX_SHADER = `\n  attribute vec2 position;\n  varying vec2 texCoords;\n\n  void main() {\n    texCoords = (position + 1.0) / 2.0;\n    texCoords.y = 1.0 - texCoords.y;\n    gl_Position = vec4(position, 0, 1.0);\n  }\n`;\nconst BASE_FRAGMENT_SHADER = `\n  precision highp float;\n  varying vec2 texCoords;\n\n  uniform sampler2D textureSampler;\n  uniform float brightness;\n  uniform float exposure;\n  uniform float contrast;\n  uniform float shadows;\n  uniform float highlights;\n  uniform float saturation;\n  uniform float warmth;\n  uniform float tint;\n\n  vec3 adjustBrightness(vec3 color, float brightness) {\n    return color + brightness;\n  }\n\n  vec3 adjustExposure(vec3 color, float exposure) {\n    return color * pow(2.0, exposure);\n  }\n\n  vec3 adjustContrast(vec3 color, float contrast) {\n    return 0.5 + (contrast + 1.0) * (color.rgb - 0.5);\n  }\n\n  vec3 adjustSaturation(vec3 color, float saturation) {\n    // WCAG 2.1 relative luminance base\n    const vec3 luminanceWeighting = vec3(0.2126, 0.7152, 0.0722);\n    vec3 grayscaleColor = vec3(dot(color, luminanceWeighting));\n    return mix(grayscaleColor, color, 1.0 + saturation);\n  }\n\n  vec3 adjustTempTint(vec3 color, float warmth, float tint) {\n    const vec3 warmFilter = vec3(0.93, 0.54, 0.0);\n    const mat3 RGBtoYIQ = mat3(0.299, 0.587, 0.114, 0.596, -0.274, -0.322, 0.212, -0.523, 0.311);\n    const mat3 YIQtoRGB = mat3(1.0, 0.956, 0.621, 1.0, -0.272, -0.647, 1.0, -1.105, 1.702);\n\n    // adjusting tint\n    vec3 yiq = RGBtoYIQ * color;\n    yiq.b = clamp(yiq.b + tint*0.5226*0.1, -0.5226, 0.5226);\n    vec3 rgb = YIQtoRGB * yiq;\n\n    // adjusting warmth\n    vec3 processed = vec3(\n      (rgb.r < 0.5 ? (2.0 * rgb.r * warmFilter.r) : (1.0 - 2.0 * (1.0 - rgb.r) * (1.0 - warmFilter.r))),\n      (rgb.g < 0.5 ? (2.0 * rgb.g * warmFilter.g) : (1.0 - 2.0 * (1.0 - rgb.g) * (1.0 - warmFilter.g))),\n      (rgb.b < 0.5 ? (2.0 * rgb.b * warmFilter.b) : (1.0 - 2.0 * (1.0 - rgb.b) * (1.0 - warmFilter.b)))\n    );\n    return mix(rgb, processed, warmth);\n  }\n\n  vec3 adjustShadowsHighlights(vec3 color, float shadows, float highlights) {\n    const vec3 luminanceWeighting = vec3(0.3, 0.3, 0.3);\n    mediump float luminance = dot(color, luminanceWeighting);\n\n    mediump float shadow = clamp((pow(luminance, 1.0/(shadows+1.0)) + (-0.76)*pow(luminance, 2.0/(shadows+1.0))) - luminance, 0.0, 1.0);\n    mediump float highlight = clamp((1.0 - (pow(1.0-luminance, 1.0/(1.0-highlights)) + (-0.8)*pow(1.0-luminance, 2.0/(1.0-highlights)))) - luminance, -1.0, 0.0);\n    lowp vec3 result = vec3(0.0, 0.0, 0.0) + ((luminance + shadow + highlight) - 0.0) * ((color - vec3(0.0, 0.0, 0.0))/(luminance - 0.0));\n\n    return result;\n  }\n\n  void main() {\n    vec4 color = texture2D(textureSampler, texCoords);\n    \n    color.rgb = adjustShadowsHighlights(color.rgb, shadows, highlights);\n    color.rgb = adjustExposure(color.rgb, exposure);\n    color.rgb = adjustBrightness(color.rgb, brightness);\n    color.rgb = adjustContrast(color.rgb, contrast);\n    color.rgb = adjustTempTint(color.rgb, warmth, tint);\n    color.rgb = adjustSaturation(color.rgb, saturation);\n\n    gl_FragColor = color;\n  }\n`;\nconst VERTICES = new Float32Array([-1, -1, -1, 1, 1, 1, -1, -1, 1, 1, 1, -1]);\nexport class CanvasRenderer {\n    constructor(targetCanvas) {\n        this.state = \"Awaiting Image\";\n        this.programUniformLocations = new Map();\n        this.canvas = targetCanvas;\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        const gl = (this.context = this.canvas.getContext(\"webgl\"));\n        if (gl === null) {\n            throw new Error(\"Couldn't get a WebGL context\");\n        }\n        this.shaderCompiler = new ShaderCompiler(gl);\n        this.clearCanvas();\n        const program = this.createProgram([\n            this.shaderCompiler.compileVertexShader(BASE_VERTEX_SHADER),\n            this.shaderCompiler.compileFragmentShader(BASE_FRAGMENT_SHADER),\n        ]);\n        this.useProgram(program);\n        this.getUniforms();\n    }\n    createProgram(shaders) {\n        const gl = this.context;\n        const program = gl.createProgram();\n        shaders.forEach((shader) => gl.attachShader(program, shader));\n        gl.linkProgram(program);\n        return program;\n    }\n    useProgram(program) {\n        const gl = this.context;\n        gl.useProgram(program);\n        this.currentProgram = program;\n    }\n    clearCanvas() {\n        const gl = this.context;\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    getUniforms() {\n        const gl = this.context;\n        this.programUniformLocations = new Map();\n        const numUniforms = gl.getProgramParameter(this.currentProgram, gl.ACTIVE_UNIFORMS);\n        for (let i = 0; i < numUniforms; i++) {\n            const info = gl.getActiveUniform(this.currentProgram, i);\n            if (info === null) {\n                throw new Error(`Couldn't get uniform at index: ${i}.`);\n            }\n            const location = gl.getUniformLocation(this.currentProgram, info.name);\n            if (location) {\n                this.programUniformLocations.set(info.name, {\n                    type: info.type,\n                    location,\n                });\n            }\n        }\n    }\n    setUniform(name, value) {\n        const gl = this.context;\n        if (!this.programUniformLocations.has(name)) {\n            warnUnknownName(name);\n            return;\n        }\n        const info = this.programUniformLocations.get(name);\n        switch (info.type) {\n            case gl.FLOAT:\n                if (typeof value !== \"number\") {\n                    warnNumeric(name, value);\n                    break;\n                }\n                gl.uniform1fv(info.location, [value]);\n                break;\n            case gl.FLOAT_VEC2:\n                if (!(value instanceof Float32Array)) {\n                    warnF32List(name, value);\n                    break;\n                }\n                gl.uniform2fv(info.location, value);\n                break;\n            case gl.FLOAT_VEC3:\n                if (!(value instanceof Float32Array)) {\n                    warnF32List(name, value);\n                    break;\n                }\n                gl.uniform3fv(info.location, value);\n                break;\n            case gl.FLOAT_VEC4:\n                if (!(value instanceof Float32Array)) {\n                    warnF32List(name, value);\n                    break;\n                }\n                gl.uniform4fv(info.location, value);\n                break;\n            case gl.BOOL:\n            case gl.INT:\n                if (typeof value !== \"number\") {\n                    warnNumeric(name, value);\n                    break;\n                }\n                gl.uniform1iv(info.location, [value]);\n                break;\n            case gl.BOOL_VEC2:\n            case gl.INT_VEC2:\n                if (!(value instanceof Int32Array)) {\n                    warnI32List(name, value);\n                    break;\n                }\n                gl.uniform2iv(info.location, value);\n                break;\n            case gl.BOOL_VEC3:\n            case gl.INT_VEC3:\n                if (!(value instanceof Int32Array)) {\n                    warnI32List(name, value);\n                    break;\n                }\n                gl.uniform3iv(info.location, value);\n                break;\n            case gl.BOOL_VEC4:\n            case gl.INT_VEC4:\n                if (!(value instanceof Int32Array)) {\n                    warnI32List(name, value);\n                    break;\n                }\n                gl.uniform4iv(info.location, value);\n                break;\n            default:\n                warnUnknownType(name);\n        }\n    }\n    setTexture(image, options = {}) {\n        const gl = this.context;\n        let glInterpolationMode;\n        const { interpolationMode = \"Linear\" } = options;\n        switch (interpolationMode) {\n            case \"Nearest\":\n                glInterpolationMode = gl.NEAREST;\n                break;\n            case \"Linear\":\n            default:\n                glInterpolationMode = gl.LINEAR;\n                break;\n        }\n        const texture = gl.createTexture();\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, glInterpolationMode);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, glInterpolationMode);\n        this.state = \"Ready\";\n    }\n    draw(params) {\n        const gl = this.context;\n        if (this.state !== \"Ready\") {\n            throw new Error(\"Iris Failed to render. setImageData() has not been called.\");\n        }\n        this.canvas.width = params.width * params.pixelRatio;\n        this.canvas.height = params.height * params.pixelRatio;\n        this.canvas.style.width = `${params.width}px`;\n        this.canvas.style.height = `${params.height}px`;\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        const vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, VERTICES, gl.STATIC_DRAW);\n        const positionLocation = gl.getAttribLocation(this.currentProgram, \"position\");\n        gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(positionLocation);\n        this.setUniform(\"brightness\", params.adjustments.brightness);\n        this.setUniform(\"exposure\", params.adjustments.exposure);\n        this.setUniform(\"contrast\", params.adjustments.contrast);\n        this.setUniform(\"highlights\", params.adjustments.highlights);\n        this.setUniform(\"shadows\", params.adjustments.shadows);\n        this.setUniform(\"saturation\", params.adjustments.saturation);\n        this.setUniform(\"warmth\", params.adjustments.warmth);\n        this.setUniform(\"tint\", params.adjustments.tint);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n    getImageDataFromCanvas() {\n        const gl = this.context;\n        const pixelBuffer = new Uint8ClampedArray(gl.drawingBufferWidth * gl.drawingBufferHeight * 4);\n        this.context.readPixels(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight, gl.RGBA, gl.UNSIGNED_BYTE, pixelBuffer);\n        return new ImageData(pixelBuffer, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    }\n    getState() {\n        return this.state;\n    }\n    setImage(inputImage) {\n        this.setTexture(inputImage);\n    }\n    render(params) {\n        this.draw(params);\n        return this.getImageDataFromCanvas();\n    }\n}\n//# sourceMappingURL=index.js.map","export var Rotation;\n(function (Rotation) {\n    Rotation[Rotation[\"0deg\"] = 0] = \"0deg\";\n    Rotation[Rotation[\"90deg\"] = 90] = \"90deg\";\n    Rotation[Rotation[\"180deg\"] = 180] = \"180deg\";\n    Rotation[Rotation[\"270deg\"] = 270] = \"270deg\";\n})(Rotation || (Rotation = {}));\nexport const defaultCropParameters = {\n    rotation: Rotation[\"0deg\"],\n    adjust: 0,\n    cx: 0.5,\n    cy: 0.5,\n    dx: 1,\n    dy: 1,\n};\n//# sourceMappingURL=CropParameters.js.map","export const adjustmentParameterConfig = {\n    brightness: { min: -1, max: 1, default: 0 },\n    exposure: { min: -1, max: 1, default: 0 },\n    contrast: { min: -1, max: 1, default: 0 },\n    highlights: { min: -1, max: 0, default: 0 },\n    shadows: { min: 0, max: 1, default: 0 },\n    warmth: { min: -1, max: 1, default: 0 },\n    tint: { min: -1, max: 1, default: 0 },\n    saturation: { min: -1, max: 1, default: 0 },\n    sharpness: { min: -1, max: 1, default: 0 },\n    grain: { min: 0, max: 1, default: 0 },\n    vignette: { min: 0, max: 1, default: 0 },\n};\nexport const defaultAdjustmentParameters = (() => {\n    const returnDefaults = {};\n    Object.keys(adjustmentParameterConfig).forEach((key) => {\n        returnDefaults[key] = adjustmentParameterConfig[key].default;\n    });\n    return returnDefaults;\n})();\n//# sourceMappingURL=AdjustmentParameters.js.map","import { CanvasRenderer } from \"../CanvasRenderer\";\nimport { defaultAdjustmentParameters, } from \"../types/AdjustmentParameters\";\nimport { defaultCropParameters } from \"../types/CropParameters\";\nexport class Iris {\n    constructor(targetCanvas) {\n        this.inputDimensions = { width: 0, height: 0 };\n        this.adjustmentParams = defaultAdjustmentParameters;\n        this.cropParams = defaultCropParameters;\n        this.canvasRenderer = new CanvasRenderer(targetCanvas);\n    }\n    getOutputDimensions() {\n        if (this.maxOutputDimensions === undefined) {\n            return this.inputDimensions;\n        }\n        const heightRatio = this.maxOutputDimensions.height / this.inputDimensions.height;\n        const widthRatio = this.maxOutputDimensions.width / this.inputDimensions.width;\n        const targetRatio = Math.min(1, heightRatio, widthRatio);\n        return {\n            width: this.inputDimensions.width * targetRatio,\n            height: this.inputDimensions.height * targetRatio,\n        };\n    }\n    getOutputPixelRatio() {\n        var _a;\n        return ((_a = this.maxOutputDimensions) === null || _a === void 0 ? void 0 : _a.pixelRatio) || 1;\n    }\n    setImage(inputImage) {\n        if (inputImage instanceof ImageData) {\n            this.inputDimensions = {\n                width: inputImage.width,\n                height: inputImage.height,\n            };\n        }\n        if (inputImage instanceof HTMLImageElement) {\n            this.inputDimensions = {\n                width: inputImage.naturalWidth,\n                height: inputImage.naturalHeight,\n            };\n        }\n        this.canvasRenderer.setImage(inputImage);\n    }\n    getState() {\n        return this.canvasRenderer.getState();\n    }\n    setMaxOutputDimensions(dimensions, pixelRatio) {\n        this.maxOutputDimensions = Object.assign(Object.assign({}, dimensions), { pixelRatio: pixelRatio || 1 });\n    }\n    setAdjustments(adjustments) {\n        this.adjustmentParams = adjustments;\n    }\n    getAdjustments() {\n        return Object.assign({}, this.adjustmentParams);\n    }\n    resetAdjustments() {\n        this.setAdjustments(defaultAdjustmentParameters);\n    }\n    setAdjustmentValue(parameter, value) {\n        this.adjustmentParams[parameter] = value;\n    }\n    getAdjustmentValue(parameter) {\n        return this.adjustmentParams[parameter];\n    }\n    render() {\n        return this.canvasRenderer.render(Object.assign(Object.assign({}, this.getOutputDimensions()), { pixelRatio: this.getOutputPixelRatio(), adjustments: this.adjustmentParams }));\n    }\n}\n//# sourceMappingURL=index.js.map","import { createContext, useCallback, useEffect, useRef, useState } from \"react\";\nimport { defaultAdjustmentParameters, Iris, } from \"@iris/core\";\nimport { useTempGetImageData } from \"../hooks/useTempGetImageData\";\nexport const IrisContext = createContext(undefined);\nexport const { Provider, Consumer } = IrisContext;\nexport const useRootIrisContextValue = () => {\n    const previewIrisInstances = useRef();\n    const hasRenderScheduled = useRef(false);\n    const [adjustments, _setAdjustments] = useState(defaultAdjustmentParameters);\n    const imageElem = useTempGetImageData(\"/jag.jpg\");\n    useEffect(() => {\n        if (imageElem !== undefined) {\n            Object.getOwnPropertySymbols(previewIrisInstances.current).forEach((reference) => {\n                const instance = previewIrisInstances.current[reference];\n                instance.setImage(imageElem);\n                instance.render();\n            });\n        }\n    }, [imageElem, previewIrisInstances.current]);\n    const createPreviewInstance = useCallback((params) => {\n        const { maxDimensions, pixelRatio } = params;\n        const reference = Symbol();\n        const instance = new Iris(params.canvas);\n        instance.setAdjustments(adjustments);\n        if (maxDimensions !== undefined) {\n            instance.setMaxOutputDimensions(maxDimensions, pixelRatio);\n        }\n        previewIrisInstances.current = Object.assign(Object.assign({}, previewIrisInstances.current), { [reference]: instance });\n        return [instance, reference];\n    }, [previewIrisInstances, adjustments]);\n    const destroyPreviewInstance = useCallback((reference) => {\n        const newPreviewInstances = Object.assign({}, previewIrisInstances.current);\n        delete newPreviewInstances[reference];\n        previewIrisInstances.current = newPreviewInstances;\n    }, [previewIrisInstances]);\n    const render = useCallback(() => {\n        Object.getOwnPropertySymbols(previewIrisInstances.current).forEach((reference) => {\n            const instance = previewIrisInstances.current[reference];\n            if (instance.getState() !== \"Ready\")\n                return;\n            instance.render();\n        });\n    }, [previewIrisInstances]);\n    const scheduleRender = useCallback(() => {\n        if (!hasRenderScheduled.current) {\n            requestAnimationFrame(() => {\n                render();\n                hasRenderScheduled.current = false;\n            });\n        }\n    }, [hasRenderScheduled]);\n    const setInstanceAdjustments = useCallback((adjustments) => {\n        Object.getOwnPropertySymbols(previewIrisInstances.current).forEach((reference) => {\n            const instance = previewIrisInstances.current[reference];\n            instance.setAdjustments(adjustments);\n        });\n    }, [previewIrisInstances]);\n    const setAdjustments = useCallback((adjustments) => {\n        _setAdjustments(adjustments);\n        setInstanceAdjustments(adjustments);\n        scheduleRender();\n    }, []);\n    return {\n        _previewIrisInstances: previewIrisInstances,\n        createPreviewInstance: createPreviewInstance,\n        destroyPreviewInstance: destroyPreviewInstance,\n        adjustments: adjustments,\n        setAdjustments: setAdjustments,\n    };\n};\n//# sourceMappingURL=IrisContext.js.map","import { useEffect, useState } from \"react\";\nexport const useTempGetImageData = (imageUrl) => {\n    const [imageData, setImageData] = useState();\n    useEffect(() => {\n        const img = document.createElement(\"img\");\n        img.crossOrigin = \"Anonymous\";\n        img.src = imageUrl;\n        img.addEventListener(\"load\", () => {\n            setImageData(img);\n        });\n    }, [imageUrl, setImageData]);\n    return imageData;\n};\n//# sourceMappingURL=useTempGetImageData.js.map","import { useContext } from \"react\";\nimport { IrisContext } from \"../contexts/IrisContext\";\nexport const useIrisContext = () => {\n    const context = useContext(IrisContext);\n    if (!context) {\n        throw new Error(\"Iris context accessed outside of a valid IrisProvider\");\n    }\n    return context;\n};\n//# sourceMappingURL=useIrisContext.js.map","import { adjustmentParameterConfig } from \"@iris/core\";\nimport { useCallback } from \"react\";\nimport { useAdjustments } from \"./useAdjustments\";\nexport const useAdjustment = (parameter) => {\n    const [adjustments, setAdjustments] = useAdjustments();\n    const { min, max } = adjustmentParameterConfig[parameter];\n    const setAdjustment = useCallback((value) => {\n        setAdjustments(Object.assign(Object.assign({}, adjustments), { [parameter]: value }));\n    }, [adjustments, parameter]);\n    return [adjustments[parameter], setAdjustment, min, max];\n};\n//# sourceMappingURL=useAdjustment.js.map","import { useIrisContext } from \"./useIrisContext\";\nexport const useAdjustments = () => {\n    const irisContext = useIrisContext();\n    return [irisContext.adjustments, irisContext.setAdjustments];\n};\n//# sourceMappingURL=useAdjustments.js.map","import { css } from \"@emotion/react\";\nimport {\n  FC,\n  Fragment,\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nexport type ParameterControlProps = Omit<\n  HTMLAttributes<HTMLInputElement>,\n  \"onChange\"\n> & {\n  min: number;\n  max: number;\n  value: number;\n  onChange?(value: number): void;\n};\n\nexport const ParameterControl: FC<ParameterControlProps> = (props) => {\n  const { min, max, value: inputValue, onChange, ...baseProps } = props;\n  const [value, setValue] = useState(inputValue);\n\n  const scrubTrackWidth = useRef<number>(0);\n  const scrubTrackRef = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const valueCent = useMemo(() => Math.round(value * 100), [value]);\n  const length = useMemo(() => max + -min, [max, min]);\n\n  const drawTrack = useCallback(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    const pixelRatio = window?.devicePixelRatio ?? 1;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const w = canvas.clientWidth * pixelRatio * (length / 2);\n    // ^ 50% per unit. For some reason the canvas clientWidth isn't what I expected..\n    // Therefore, I multiply it by (length / 2)\n    const h = canvas.clientHeight * pixelRatio;\n    const totalMarks = length * 20;\n    const distanceBetweenMarks = (w - pixelRatio) / totalMarks;\n    canvas.width = w;\n    canvas.height = h;\n    scrubTrackWidth.current = canvas.clientWidth;\n\n    if (!ctx) {\n      return;\n    }\n\n    ctx.clearRect(0, 0, w, h);\n    ctx.lineWidth = 0.8 * pixelRatio;\n\n    for (let m = 0; m <= totalMarks; m++) {\n      const x = Math.floor(m * distanceBetweenMarks) + pixelRatio / 2;\n\n      ctx.beginPath();\n      ctx.strokeStyle = m % 10 === 0 ? \"#fff\" : \"#5c5c5c\";\n\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, h);\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }, [length]);\n\n  const handleScrubTrackScroll = useCallback(\n    (event: Event) => {\n      const scrubTrack = event.currentTarget as HTMLDivElement;\n      const scrollLeft = scrubTrack.scrollLeft;\n      const trackWidth = scrubTrackWidth.current;\n\n      const newValue = (scrollLeft / trackWidth) * length + min;\n\n      setValue(newValue);\n\n      if (onChange !== undefined) {\n        onChange(newValue);\n      }\n    },\n    [min, length, onChange]\n  );\n\n  useLayoutEffect(() => {\n    drawTrack();\n  }, [drawTrack]);\n\n  useEffect(() => {\n    if (!scrubTrackRef.current) {\n      return;\n    }\n    const scrubTrack = scrubTrackRef.current;\n\n    scrubTrack.addEventListener(\"scroll\", handleScrubTrackScroll, {\n      passive: true,\n    });\n\n    return () => {\n      scrubTrack.removeEventListener(\"scroll\", handleScrubTrackScroll);\n    };\n  }, [handleScrubTrackScroll]);\n\n  useEffect(() => {\n    if (!scrubTrackRef.current) {\n      return;\n    }\n    const scrubTrack = scrubTrackRef.current;\n    const newValue = ((value - min) / length) * scrubTrackWidth.current;\n\n    scrubTrack.scrollLeft = newValue;\n  }, [value, length, min]);\n\n  useEffect(() => {\n    if (value !== inputValue) {\n      setValue(inputValue);\n    }\n  }, [inputValue]);\n\n  return (\n    <Fragment>\n      {/* <input type=\"range\" min={min} max={max} value={value} {...baseProps} /> */}\n      <div\n        css={css`\n          position: relative;\n          width: 100%;\n\n          &:before {\n            content: \"\";\n            pointer-events: none;\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            background: linear-gradient(\n              90deg,\n              rgba(35, 35, 35, 1),\n              rgba(35, 35, 35, 0) 20%,\n              rgba(35, 35, 35, 0) 80%,\n              rgba(35, 35, 35, 1)\n            );\n          }\n        `}\n        {...baseProps}\n      >\n        <div\n          css={css`\n            position: absolute;\n            left: 50%;\n            transform: translateX(-50%);\n            height: 45px;\n          `}\n        >\n          <div\n            css={css`\n              background: #61c781;\n              position: absolute;\n              left: 50%;\n              transform: translateX(-2px);\n              top: 18px;\n              bottom: 0;\n              border-left: 1px solid #232323;\n              border-right: 1px solid #232323;\n              width: 1px;\n            `}\n          />\n          <div\n            css={css`\n              color: #61c781;\n              font-size: 12px;\n              font-weight: regular;\n              text-align: center;\n              text-overflow: visible;\n              text-transform: uppercase;\n              text-align: center;\n              width: 4em;\n              pointer-events: none;\n            `}\n          >\n            {valueCent}\n          </div>\n        </div>\n        <div\n          ref={scrubTrackRef}\n          css={css`\n            display: flex;\n            overflow-x: scroll;\n            overflow-y: hidden;\n            padding-top: 30px;\n            padding-bottom: 37px;\n\n            &:before,\n            &:after {\n              content: \"\";\n              display: block;\n              flex: 0 0 calc(50% - 1px);\n            }\n          `}\n        >\n          <canvas\n            ref={canvasRef}\n            css={css`\n              flex: 0 0 ${length * 50}%;\n              height: 15px;\n            `}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport {\n  Fragment,\n  useCallback,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport mergeRefs from \"react-merge-refs\";\nimport {\n  cloneElement,\n  FC,\n  forwardRef,\n  HTMLAttributes,\n  ReactElement,\n  useMemo,\n} from \"react\";\nimport { useEffect } from \"react\";\n\nexport type CarouselProps = HTMLAttributes<HTMLUListElement> & {\n  children: ReactElement[] | ReactElement;\n  snap?: \"start\" | \"center\" | \"none\";\n  gap?: string;\n  paddingX?: string;\n  paddingY?: string;\n  snapSkipConstructors?: FC[];\n  focusedItem: number | undefined;\n  onFocusedItemChange?(index: number): void;\n  _highlightIndicator?: ReactElement;\n};\n\nexport const Carousel = forwardRef<HTMLUListElement, CarouselProps>(\n  (props, ref) => {\n    const {\n      children,\n      snap = \"start\",\n      paddingX = \"24px\",\n      paddingY = \"24px\",\n      gap = \"24px\",\n      snapSkipConstructors,\n      focusedItem,\n      onFocusedItemChange,\n      _highlightIndicator,\n      ...baseProps\n    } = props;\n    const carouselRef = useRef<HTMLUListElement>(null);\n    const isAutoScrolling = useRef(false);\n    const [internalFocusedItem, setInternalFocusedItem] = useState(focusedItem);\n\n    const itemArray = useMemo(\n      () =>\n        (children instanceof Array\n          ? [...children]\n          : [children]) as ReactElement[],\n      [children]\n    );\n\n    const ignoredItemIndeces = useMemo(\n      () =>\n        itemArray\n          .map((i, index) =>\n            snapSkipConstructors?.some((c) => c === i.type) ? index : undefined\n          )\n          .filter(Number) as number[],\n      [itemArray, snapSkipConstructors]\n    );\n\n    // Handle change of external focusedItem prop\n    useEffect(() => {\n      if (\n        focusedItem === undefined ||\n        focusedItem === internalFocusedItem ||\n        carouselRef.current === null\n      ) {\n        return;\n      }\n\n      isAutoScrolling.current = true;\n      setTimeout(() => {\n        // This should be a nicer scroll-handle check.\n        isAutoScrolling.current = false;\n      }, 1500);\n\n      const targetIndex =\n        focusedItem +\n        itemArray\n          .slice(0, focusedItem)\n          .filter((_, i) => ignoredItemIndeces.some((i3) => i3 === i)).length;\n\n      const elementToFocus = carouselRef.current.children[\n        targetIndex\n      ] as HTMLLIElement;\n      if (elementToFocus === undefined) {\n        return;\n      }\n\n      if (snap === \"center\") {\n        carouselRef.current.scrollLeft =\n          elementToFocus.offsetLeft +\n          elementToFocus.clientWidth / 2 -\n          carouselRef.current.clientWidth / 2;\n      } else {\n        carouselRef.current.scrollLeft = elementToFocus.offsetLeft;\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [focusedItem, itemArray, snapSkipConstructors]);\n\n    const handleScroll = useCallback(\n      (e: Event) => {\n        const target = e.currentTarget as HTMLUListElement;\n        const currentVisualCenter = target.scrollLeft + target.clientWidth / 2;\n        const children = target.children;\n        let closestIndex = 0;\n        let closestPosition = -1;\n\n        [...children]\n          .filter((c, i) => !ignoredItemIndeces.some((i3) => i3 === i))\n          .splice(0, children.length - 1)\n          .forEach((child, i) => {\n            let childE = child as HTMLElement;\n            const left = childE.offsetLeft + childE.clientWidth / 2;\n            const offset = Math.abs(currentVisualCenter - left);\n            if (closestPosition === -1 || offset < closestPosition) {\n              closestIndex = i;\n              closestPosition = offset;\n            }\n          });\n\n        if (closestIndex !== internalFocusedItem) {\n          setInternalFocusedItem(closestIndex);\n          navigator.vibrate(10);\n          if (onFocusedItemChange !== undefined && !isAutoScrolling.current) {\n            onFocusedItemChange(closestIndex);\n          }\n        }\n      },\n      [ignoredItemIndeces, internalFocusedItem, onFocusedItemChange, isAutoScrolling]\n    );\n\n    useLayoutEffect(() => {\n      const carouselElem = carouselRef.current;\n      if (carouselElem === null) {\n        return;\n      }\n\n      carouselElem.addEventListener(\"scroll\", handleScroll, { passive: true });\n      return () => {\n        carouselElem.removeEventListener(\"scroll\", handleScroll);\n      };\n    }, [handleScroll]);\n\n    return (\n      <Fragment>\n        <ul\n          css={css`\n            scroll-behavior: smooth;\n            list-style: none;\n            padding: 0;\n            display: flex;\n            justify-content: start;\n            margin: 0;\n            overflow-x: scroll;\n            overflow-y: hidden;\n            scroll-snap-type: x mandatory;\n            scroll-padding: ${snap !== \"center\" ? paddingX : null};\n\n            &:before,\n            &:after {\n              content: \"\";\n              display: block;\n              flex: 0 0 ${paddingX};\n            }\n          `}\n          ref={mergeRefs([carouselRef, ref])}\n          {...baseProps}\n        >\n          {itemArray.map((item, index) => {\n            const isIgnoredConstructor = snapSkipConstructors?.some(\n              (c) => c === item.type\n            );\n\n            return (\n              <li\n                key={index}\n                role={isIgnoredConstructor ? \"presentation\" : \"\"}\n                css={css`\n                  flex: 0 0 auto;\n                  margin-right: ${gap};\n                  margin-top: ${paddingY};\n                  margin-bottom: ${paddingY};\n                  scroll-snap-align: ${!isIgnoredConstructor ? snap : null};\n\n                  &:last-child {\n                    margin-right: 0;\n                  }\n                `}\n              >\n                {cloneElement(item)}\n              </li>\n            );\n          })}\n          {_highlightIndicator !== undefined ? (\n            <li>{_highlightIndicator}</li>\n          ) : null}\n        </ul>\n      </Fragment>\n    );\n  }\n);\n","import { css } from \"@emotion/react\";\nimport {\n  cloneElement,\n  FC,\n  ReactElement,\n  Children,\n  useRef,\n  useState,\n  useEffect,\n  HTMLAttributes,\n  useMemo,\n} from \"react\";\nimport { Carousel } from \"../Carousel\";\nimport { TabMenuItemProps } from \"../TabMenuItem\";\n\nexport type TabMenuProps = {\n  children: ReactElement<TabMenuItemProps>[];\n  onTabChange?(index: number): void;\n};\n\nconst TabHighlight: FC<HTMLAttributes<HTMLDivElement>> = (baseProps) => (\n  <div\n    css={css`\n      background-color: #313131;\n      border-radius: 100px;\n      height: 36px;\n      min-width: 36px;\n      position: absolute;\n      top: 22px;\n    `}\n    {...baseProps}\n  />\n);\n\nexport const TabMenu: FC<TabMenuProps> = (props) => {\n  const { onTabChange, children } = props;\n  const carouselRef = useRef<HTMLUListElement>(null);\n  const [highlightBounds, setHighlightBounds] = useState<{\n    width: number;\n    left: number;\n  }>({ width: 0, left: 0 });\n\n  const highlightedTab = useMemo(() => {\n    const i = children.findIndex((child) => child.props.selected);\n    return i !== -1 ? i : 0;\n  }, [children]);\n\n  useEffect(() => {\n    if (carouselRef.current === null) {\n      return;\n    }\n\n    const targetChild = carouselRef.current.children[\n      highlightedTab\n    ] as HTMLElement;\n    setHighlightBounds({\n      width: targetChild.clientWidth,\n      left: targetChild.offsetLeft,\n    });\n  }, [highlightedTab]);\n\n  return (\n    <div>\n      <Carousel\n        paddingX=\"50%\"\n        snap=\"center\"\n        snapSkipConstructors={[TabHighlight]}\n        ref={carouselRef}\n        focusedItem={highlightedTab}\n        onFocusedItemChange={onTabChange}\n        _highlightIndicator={\n          <TabHighlight\n            css={css`\n              width: ${highlightBounds.width}px;\n              left: ${highlightBounds.left}px;\n              transition: width linear 0.2s, left linear 0.2s;\n            `}\n          />\n        }\n        css={css`\n          position: relative;\n        `}\n      >\n        {Children.map([...children], (child, index) =>\n          cloneElement(child, {\n            selected: index === highlightedTab,\n          })\n        )}\n      </Carousel>\n    </div>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport { FC, HTMLAttributes } from \"react\";\n\nexport type TabMenuItemProps = HTMLAttributes<HTMLButtonElement> & {\n  label: string;\n  selected?: boolean;\n};\n\nexport const TabMenuItem: FC<TabMenuItemProps> = (props) => {\n  const { label, selected = false, ...baseProps } = props;\n\n  return (\n    <button\n      css={css`\n        background: none;\n        color: ${selected ? `#FFFFFF` : \"#A7A7A7\"};\n        border: none;\n        font-size: 14px;\n        text-transform: uppercase;\n        padding: 6px 12px;\n        z-index: 1;\n        position: relative;\n      `}\n      {...baseProps}\n    >\n      {label}\n    </button>\n  );\n};\n","import { FC, useCallback, useState } from \"react\";\nimport { TabMenu } from \"../../atoms/TabMenu\";\nimport { TabMenuItem } from \"../../atoms/TabMenuItem\";\n\nconst menuItems = [{ label: \"Presets\" }, { label: \"Advanced\" }];\n\nexport type ModeSelectorProps = {};\n\nexport const ModeSelector: FC<ModeSelectorProps> = (props) => {\n  const [selectedMode, setSelectedMode] = useState(0);\n\n  const handleChangeMode = useCallback((index: number) => {\n    setSelectedMode(index);\n  }, []);\n\n  return (\n    <div>\n      <TabMenu onTabChange={handleChangeMode}>\n        {menuItems.map((item, index) => (\n          <TabMenuItem\n            key={index}\n            label={item.label}\n            selected={index === selectedMode}\n            onClick={() => handleChangeMode(index)}\n          />\n        ))}\n      </TabMenu>\n    </div>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport { FC, HTMLAttributes } from \"react\";\n\nexport type IconSize = 18 | 24 | 36 | 48;\n\nexport type IconProps = HTMLAttributes<HTMLDivElement> & {\n  icon: string;\n  size?: IconSize;\n};\n\nexport const Icon: FC<IconProps> = (props) => {\n  const { icon, size = 24, className, ...baseProps } = props;\n  return (\n    <div\n      className={[\"material-icons\", className].join(\" \")}\n      css={css`\n        font-size: ${size}px;\n      `}\n      role=\"presentation\"\n      {...baseProps}\n    >\n      {icon}\n    </div>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport { FC, HTMLAttributes } from \"react\";\nimport { Icon } from \"../Icon\";\n\nexport type ParameterChipProps = HTMLAttributes<HTMLButtonElement> & {\n  label: string;\n  icon: string;\n  variant?: \"default\" | \"active\" | \"inactive\";\n};\n\nconst parameterChipColors = {\n  default: {\n    background: \"#313131\",\n    icon: \"white\",\n    label: \"white\",\n  },\n  active: {\n    background: \"#61C781\",\n    icon: \"#111111\",\n    label: \"white\",\n  },\n  inactive: {\n    background: \"transparent\",\n    icon: \"white\",\n    label: \"#A7A7A7\",\n  },\n};\n\nexport const ParameterChip: FC<ParameterChipProps> = (props) => {\n  const { label, icon, variant = \"default\", ...baseProps } = props;\n\n  const selectedColors = parameterChipColors[variant];\n\n  return (\n    <button\n      css={css`\n        border: 0;\n        background: transparent;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        width: 56px;\n      `}\n      {...baseProps}\n    >\n      <Icon\n        icon={icon}\n        size={24}\n        css={css`\n          background: ${selectedColors.background};\n          color: ${selectedColors.icon};\n          border-radius: 50%;\n          padding: 16px;\n        `}\n      />\n      <div\n        css={css`\n          color: ${selectedColors.label};\n          margin-top: 10px;\n          font-size: 12px;\n          font-weight: regular;\n          text-align: center;\n          text-overflow: visible;\n          text-transform: uppercase;\n        `}\n      >\n        {label}\n      </div>\n    </button>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport { FC } from \"react\";\n\nexport const ParameterDivider: FC = (props) => (\n  <hr\n    css={css`\n      width: 1px;\n      height: 36px;\n      margin-block-start: 12px;\n      margin-block-end: 12px;\n      background: #5c5c5c;\n      border: none;\n    `}\n  />\n);\n","import { AdjustmentParameter } from \"@iris/core\";\nimport { FC, useCallback, useMemo } from \"react\";\nimport { Carousel } from \"../../atoms/Carousel\";\nimport { ParameterChip } from \"../../atoms/ParameterChip\";\nimport { ParameterDivider } from \"../../atoms/ParameterDivider\";\n\ntype ParameterChipDef = { icon: string; label: string; index: number; parameter: AdjustmentParameter | \"crop\" }\n\nconst parameters: (\n  | \"DIVIDER\"\n  | ParameterChipDef\n)[] = [\n  { icon: \"crop\", label: \"Crop\", index: 0, parameter: \"crop\" },\n  \"DIVIDER\",\n  { icon: \"light_mode\", label: \"Brightness\", index: 1, parameter: \"brightness\" },\n  { icon: \"exposure\", label: \"Exposure\", index: 2, parameter: \"exposure\" },\n  { icon: \"tonality\", label: \"Contrast\", index: 3, parameter: \"contrast\" },\n  { icon: \"hdr_strong\", label: \"Highlights\", index: 4, parameter: \"highlights\" },\n  { icon: \"hdr_weak\", label: \"Shadows\", index: 5, parameter: \"shadows\" },\n  \"DIVIDER\",\n  { icon: \"thermostat\", label: \"Warmth\", index: 6, parameter: \"warmth\" },\n  { icon: \"colorize\", label: \"Tint\", index: 7, parameter: \"tint\" },\n  { icon: \"invert_colors\", label: \"Saturation\", index: 8, parameter: \"saturation\" },\n  \"DIVIDER\",\n  { icon: \"details\", label: \"Sharpness\", index: 9, parameter:\"sharpness\" },\n  { icon: \"grain\", label: \"Grain\", index: 10, parameter: \"grain\" },\n  { icon: \"vignette\", label: \"Vignette\", index: 11, parameter: \"vignette\" },\n];\n\nconst parameterIndexes = (parameters.filter(p => p !== \"DIVIDER\") as ParameterChipDef[]).map(p => p.parameter);\n\nexport type ParameterCarouselProps = {\n  selectedParameter: AdjustmentParameter | \"crop\" | \"none\";\n  onClickParameter(parameter: AdjustmentParameter | \"crop\" | \"none\"): void;\n};\n\nexport const ParameterCarousel: FC<ParameterCarouselProps> = (props) => {\n  const { selectedParameter, onClickParameter } = props;\n  const hasSelectedItem = useMemo(\n    () => selectedParameter !== \"none\",\n    [selectedParameter]\n  );\n\n  const handleFocusedItemChange = useCallback((index: number) => {\n    if (selectedParameter === \"none\") {\n      return;\n    }\n\n    onClickParameter(parameterIndexes[index] || \"none\")\n  }, [selectedParameter, onClickParameter]);\n\n  return (\n    <Carousel\n      paddingX=\"calc(50% - 28px)\"\n      snap={hasSelectedItem ? \"center\" : \"none\"}\n      snapSkipConstructors={[ParameterDivider]}\n      focusedItem={selectedParameter !== \"none\" ? parameterIndexes.indexOf(selectedParameter) : undefined}\n      onFocusedItemChange={handleFocusedItemChange}\n    >\n      {parameters.map((param, index) =>\n        param === \"DIVIDER\" ? (\n          <ParameterDivider key={index} />\n        ) : (\n          <ParameterChip\n            key={index}\n            variant={\n              selectedParameter === undefined\n                ? \"default\"\n                : selectedParameter === param.parameter\n                ? \"active\"\n                : \"inactive\"\n            }\n            icon={param.icon}\n            label={param.label}\n            onClick={() => onClickParameter(param.parameter)}\n          />\n        )\n      )}\n    </Carousel>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport { HTMLAttributes, useState } from \"react\";\nimport { FC } from \"react\";\nimport { useAdjustment } from \"@iris/react\";\nimport { ParameterControl } from \"../../atoms/ParameterControl\";\nimport { ModeSelector } from \"../../molecules/ModeSelector\";\nimport { ParameterCarousel } from \"../../molecules/ParameterCarousel\";\nimport { AdjustmentParameter } from \"@iris/core\";\n\nexport type EditorControlsProps = HTMLAttributes<HTMLElement>;\n\nconst AdjustmentControl: FC<{ parameter: AdjustmentParameter }> = (props) => {\n  const [paramValue, setParamValue, min, max] = useAdjustment(props.parameter);\n\n  return (\n    <ParameterControl\n      value={paramValue}\n      onChange={setParamValue}\n      min={min}\n      max={max}\n    />\n  );\n};\n\nexport const EditorControls: FC<EditorControlsProps> = (baseProps) => {\n  const [selectedParameter, setSelectedParameter] = useState<\n    AdjustmentParameter | \"crop\" | \"none\"\n  >(\"none\");\n\n  return (\n    <section\n      title=\"Editor controls\"\n      css={css`\n        background-color: #232323;\n      `}\n      {...baseProps}\n    >\n      <ParameterCarousel\n        selectedParameter={selectedParameter}\n        onClickParameter={setSelectedParameter}\n      />\n      {selectedParameter === \"none\" || selectedParameter === \"crop\" ? (\n        <ModeSelector />\n      ) : (\n        <AdjustmentControl parameter={selectedParameter} />\n      )}\n    </section>\n  );\n};\n","import { css } from \"@emotion/react\";\nimport ReactDOM from \"react-dom\";\nimport { IrisPreview, IrisProvider } from \"@iris/react\";\nimport { Fragment } from \"react\";\nimport { GlobalStyles } from \"./lib/GlobalStyles\";\nimport { EditorControls } from \"./components/organisms/EditorControls\";\n\nReactDOM.render(\n  <Fragment>\n    <GlobalStyles />\n    <IrisProvider>\n      <div\n        css={css`\n          height: 100vh;\n          display: flex;\n          flex-direction: column;\n        `}\n      >\n        <IrisPreview\n          css={css`\n            width: 100%;\n            flex: 1 1 auto;\n            display: flex;\n            line-height: 0;\n            align-items: center;\n            justify-content: center;\n          `}\n        />\n        <EditorControls\n          css={css`\n            flex: 0 0 auto;\n          `}\n        />\n      </div>\n    </IrisProvider>\n  </Fragment>,\n  document.getElementById(\"root\")\n);\n","import { css, Global } from \"@emotion/react\";\nimport { FC } from \"react\";\n\nexport const GlobalStyles: FC = () => (\n  <Global\n    styles={css`\n      body {\n        background-color: #111111;\n        color: #ffffff;\n        margin: 0;\n        font-family: \"Saira\", -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n          \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n          \"Helvetica Neue\", sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n      }\n\n      button {\n        color: inherit;\n        font-family: inherit;\n        font-weight: inherit;\n      }\n    `}\n  />\n);\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRootIrisContextValue } from \"../contexts/IrisContext\";\nimport * as IrisContext from \"../contexts/IrisContext\";\nexport const IrisProvider = (props) => {\n    const contextValue = useRootIrisContextValue();\n    return (_jsx(IrisContext.Provider, Object.assign({ value: contextValue }, { children: props.children }), void 0));\n};\n//# sourceMappingURL=IrisProvider.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, } from \"react\";\nimport { useIrisContext } from \"../hooks/useIrisContext\";\nexport const IrisPreview = (props) => {\n    const irisContext = useIrisContext();\n    const containerRef = useRef();\n    const canvasRef = useRef();\n    useEffect(() => {\n        const devicePixelRatio = (window === null || window === void 0 ? void 0 : window.devicePixelRatio) || 1;\n        const [instance, reference] = irisContext.createPreviewInstance({\n            canvas: canvasRef.current,\n            pixelRatio: devicePixelRatio,\n            maxDimensions: {\n                width: containerRef.current.clientWidth,\n                height: containerRef.current.clientHeight,\n            },\n        });\n        return () => {\n            irisContext.destroyPreviewInstance(reference);\n        };\n    }, []);\n    return (_jsx(\"div\", Object.assign({ ref: containerRef }, props, { children: _jsx(\"canvas\", { ref: canvasRef }, void 0) }), void 0));\n};\n//# sourceMappingURL=IrisPreview.js.map"],"sourceRoot":""}